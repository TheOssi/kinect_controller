#include "ros/ros.h"
#include "std_msgs/String.h"
#include <tf2_msgs/TFMessage.h>
#include <string>

using namespace std;

struct point{
 float x;
 float y;
 float z;
};

class skeletonPoints{
	point rightHand;
public: 
	point getRightHand();
	void setRightHand(float,float,float);
};

point skeletonPoints::getRightHand(){
  return rightHand;
}

void skeletonPoints::setRightHand(float x, float y,float z){
  rightHand.x = x;
  rightHand.y = y;
  rightHand.z = z;
}

void messageCallback(const tf2_msgs::TFMessage::ConstPtr& msg)
{
  skeletonPoints points;
  string childframe(msg->transforms[0].child_frame_id.c_str());  
  if(childframe == "right_hand_1"){
     points.setRightHand(msg->transforms[0].transform.translation.x,msg->transforms[0].transform.translation.y);
  point rHand = points.getRightHand();
  ROS_INFO("%6.4lf | %6.4lf | %6.4lf", rHand.x, rHand.y,rHand.z);
  }

  
}

int main(int argc, char **argv)
{
  
  ros::init(argc, argv, "listener");


  ros::NodeHandle n;


  ros::Subscriber sub = n.subscribe("/tf", 1000, messageCallback);

  ros::spin();


  return 0;
}


